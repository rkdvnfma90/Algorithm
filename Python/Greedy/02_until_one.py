"""
[1이 될때까지]
어떠한 수 n이 1이 될때까지 다음 두 과정 중 하나를 반복적으로 선택하여 수행 한다.
1. n에서 1을 뺀다
2. n을 k로 나눈다 (단, n이 k로 나누어질때만 수행한다.)

n과 k가 주어질때 n이 1이 될때까지 1번 혹은 2번 과정을 수행해야 하는 최소 횟수를 구하라.

- 입력 예시
25 5

- 출력 예시
2
"""

n, k = map(int, input().split())
result = 0

while True:
    # n을 k로 나눈 몫에 다시 k를 곱하는 이유는 만약 n이 k로 나누어 떨어지지 않았을때 가장 가까운 k의 배수를 구하기 위함이다.
    # 즉 target엔 k로 나누어 떨어지는 값이 들어가게 된다.
    target = (n // k) * k 

    # 현재의 result엔 1을 빼는 연산의 수가 들어가게된다.
    # 예를들어 n = 17 , k = 6 일때 target 은 12가 된다. 즉 17에서 12를 뺀 수가 n이 k로 나누어 떨어지게 하기 위해 1을 빼는 횟수이다.
    result += (n - target)

    n = target

    # n이 k보다 작을때, 즉 나눌수 없을때 반복문 탈출.
    if n < k:
        break

    result += 1
    n //= k

# 마지막으로 남은수에 대하여 1씩 빼기
result += (n-1)
print(result)