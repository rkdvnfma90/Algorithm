"""
문자열 뒤집기

0과 1로만 이루어진 문자열 s가 있다. 이 문자열에 있는 모든 숫자를 전부 같게 만들려고 한다.
이 때 할수있는 행등으로는 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것이다. 뒤집는다는 것은 0은 1로, 1은 0으로 바꾸는 것을 의미한다.
예를들어 s = 0001100 일때는 아래와 같다.
1. 전체를 뒤집으면 1110011 이 된다.
2. 4번째 문자부터 5번째 문자까지 뒤집으면 1111111 이 되어서 2번만에 모두 같은숫자로 만들수 있다.

하지만 처음부터 4~5번째 문자까지 뒤집으면 한번에 0000000이 되기때문에 1번만에 모두 같은 숫자로 만들 수 있다.

문자열 s가 주어졌을때 해야 하는 행동의 최소 횟수를 출력하시오.

입력조건
1. 첫째줄에 0과 1로만 이루어진 문자열 s가 주어진다. s의 길이는 100만보다 작다.
출력조건
1. 첫째줄에 다솜이가 해야 하는 행동의 최소횟수를 출력한다.

해결방안
전부 0으로 바꾸는 경우와 전부 1로 바꾸는 경우중에서 더 적은 횟수를 출력하면 된다.
"""

# 문자열 s
s = input()

# zero_count : 전부 0으로 바꾸는 경우
# one_count : 전부 1로 바꾸는 경우
zero_count = 0
one_count = 0


for i in range(len(s) - 1):
  # 현재 원소와 그 다음원소가 다르고,
  if s[i] != s[i+1]:
    # 그 다음 원소가 1일 경우 0의 카운트를 1 올려준다.
    if s[i+1] == '1':
        one_count += 1
    # 그 다음 원소가 0일 경우 1의 카운트를 1 올려준다.
    else:
        zero_count += 1

print(min(zero_count, one_count))


